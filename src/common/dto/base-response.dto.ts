import { ApiProperty } from '@nestjs/swagger'
import { Type } from '@nestjs/common'

export class ErrorResponseDto {
  @ApiProperty({ example: '400', description: '–ö–æ–¥ –æ—à–∏–±–∫–∏' })
  code: string

  @ApiProperty({
    example: 'name - –ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞',
    description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ',
  })
  message: string
}

export class BaseResponseDto<T> {
  @ApiProperty({ example: true, description: '–§–ª–∞–≥ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è' })
  success: boolean

  @ApiProperty({ required: false })
  data?: T

  @ApiProperty({ type: () => ErrorResponseDto, required: false })
  error?: ErrorResponseDto
}

// üß© –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç–≤–µ—Ç–∞ —Å –æ–±–µ—Ä—Ç–∫–æ–π –¥–ª—è Swagger (–∞–Ω–æ–Ω–∏–º–Ω—ã–π –∫–ª–∞—Å—Å —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–∏–ø–æ–º data)
export function BaseResponseDtoFactory<TModel>(
  model: Type<TModel>,
  isArray: boolean = false,
): Type<BaseResponseDto<TModel | TModel[]>> {
  class DynamicResponseDto extends BaseResponseDto<TModel | TModel[]> {
    @ApiProperty({
      type: () => model,
      required: false,
      isArray,
    })
    override data?: TModel | TModel[]
  }

  Object.defineProperty(DynamicResponseDto, 'name', {
    value: `ResponseDto_${model.name}`,
  })

  return DynamicResponseDto
}
